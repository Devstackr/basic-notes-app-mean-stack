{"ast":null,"code":"import { Note } from 'src/app/shared/note.model';\nimport { NotesService } from 'src/app/shared/notes.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/notes.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nvar NoteDetailsComponent = /** @class */function () {\n  function NoteDetailsComponent(notesService, router, route) {\n    this.notesService = notesService;\n    this.router = router;\n    this.route = route;\n  }\n  NoteDetailsComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    // we want find out if we are creating a new note or editing an existing one\n    this.route.params.subscribe(function (params) {\n      _this.note = new Note();\n      if (params.id) {\n        _this.notesService.get(params.id).subscribe(function (note) {\n          _this.note = note;\n        });\n        _this.new = false;\n      } else {\n        _this.new = true;\n      }\n    });\n  };\n  NoteDetailsComponent.prototype.onSubmit = function (form) {\n    var _this = this;\n    if (this.new) {\n      // we should save the note\n      this.notesService.add(form.value).subscribe(function (newNote) {\n        _this.router.navigateByUrl('/');\n      });\n    } else {\n      this.note.title = form.value.title;\n      this.note.body = form.value.body;\n      this.notesService.update(this.note).subscribe(function () {\n        // this code will run once the note has been updated\n        _this.router.navigateByUrl('/');\n      });\n    }\n  };\n  NoteDetailsComponent.prototype.cancel = function () {\n    this.router.navigateByUrl('/');\n  };\n  NoteDetailsComponent.ɵfac = function NoteDetailsComponent_Factory(t) {\n    return new (t || NoteDetailsComponent)(i0.ɵɵdirectiveInject(i1.NotesService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  NoteDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NoteDetailsComponent,\n    selectors: [[\"app-note-details\"]],\n    decls: 21,\n    vars: 3,\n    consts: [[1, \"form-container\"], [3, \"ngSubmit\"], [\"noteForm\", \"ngForm\"], [1, \"field\"], [1, \"label\"], [1, \"control\"], [\"type\", \"text\", \"name\", \"title\", \"required\", \"\", 1, \"input\", 3, \"ngModel\"], [\"name\", \"body\", 1, \"textarea\", 3, \"ngModel\"], [1, \"field\", \"is-grouped\", \"is-pulled-right\"], [\"type\", \"button\", 1, \"button\", \"is-text\", 3, \"click\"], [\"type\", \"submit\", 1, \"button\", \"is-success\", 3, \"disabled\"]],\n    template: function NoteDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        var _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function NoteDetailsComponent_Template_form_ngSubmit_1_listener() {\n          i0.ɵɵrestoreView(_r1);\n          var _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelement(7, \"input\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 4);\n        i0.ɵɵtext(11, \"Body\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 5);\n        i0.ɵɵelement(13, \"textarea\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 8)(15, \"div\", 5)(16, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function NoteDetailsComponent_Template_button_click_16_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(17, \"Cancel\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 5)(19, \"button\", 10);\n        i0.ɵɵtext(20, \"Save\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        var _r0 = i0.ɵɵreference(2);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.note.title);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.note.body);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\".form-container[_ngcontent-%COMP%]{max-width:500px;margin:50px auto auto}input.ng-invalid.ng-touched[_ngcontent-%COMP%], textarea.ng-invalid.ng-touched[_ngcontent-%COMP%]{border-color:red}input.ng-invalid.ng-touched[_ngcontent-%COMP%]:focus, textarea.ng-invalid.ng-touched[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 2px #ff00001a}\"]\n  });\n  return NoteDetailsComponent;\n}();\nexport { NoteDetailsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}