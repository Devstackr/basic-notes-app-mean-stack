{"ast":null,"code":"import { WebRequestService } from './web-request.service';\nimport { HttpClient } from '@angular/common/http';\nimport { shareReplay, tap } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./web-request.service\";\nimport * as i2 from \"@angular/common/http\";\nvar AuthService = /** @class */function () {\n  function AuthService(webReqService, http) {\n    this.webReqService = webReqService;\n    this.http = http;\n  }\n  AuthService.prototype.login = function (email, password) {\n    return this.http.post(\"\".concat(this.webReqService.ROOT_URI, \"/users/login\"), {\n      email: email,\n      password: password\n    }, {\n      observe: 'response'\n    }).pipe(shareReplay(), tap(function (res) {\n      // the auth tokens will be in the header of this response\n      console.log(res.headers);\n      localStorage.setItem('accessToken', res.headers.get('x-access-token'));\n      localStorage.setItem('refreshToken', res.headers.get('x-refresh-token'));\n      localStorage.setItem('userId', res.body._id);\n      console.log(\"Sucessfully logged in\");\n    }));\n  };\n  AuthService.prototype.signup = function (name, email, password) {\n    return this.http.post(\"\".concat(this.webReqService.ROOT_URI, \"/users\"), {\n      name: name,\n      email: email,\n      password: password\n    }, {\n      observe: 'response'\n    }).pipe(shareReplay(), tap(function (res) {\n      console.log(\"Signed up successfully\");\n    }));\n  };\n  AuthService.prototype.getAccessToken = function () {\n    return localStorage.getItem('accessToken');\n  };\n  AuthService.prototype.getRefreshToken = function () {\n    return localStorage.getItem('refreshToken');\n  };\n  AuthService.prototype.getUserId = function () {\n    return localStorage.getItem('userId');\n  };\n  AuthService.prototype.removeStorageItems = function () {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('userId');\n  };\n  AuthService.prototype.getNewAccessToken = function () {\n    var refreshToken = this.getRefreshToken();\n    var userId = this.getUserId();\n    if (refreshToken && userId) {\n      return this.http.get(\"\".concat(this.webReqService.ROOT_URI, \"/users/me/access-token\"), {\n        headers: {\n          'x-refresh-token': refreshToken,\n          '_id': userId\n        },\n        observe: 'response'\n      }).pipe(tap(function (res) {\n        localStorage.setItem('accessToken', res.headers.get('x-access-token'));\n      }));\n    } else {\n      return throwError(new Error('Refresh token and/or User Id is null or undefined'));\n    }\n  };\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.WebRequestService), i0.ɵɵinject(i2.HttpClient));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n}();\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}